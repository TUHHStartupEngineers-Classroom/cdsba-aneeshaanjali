{
  "hash": "9694b4d51cdc047f6684bea57b412e24",
  "result": {
    "markdown": "---\ntitle: \"Regression and Statistical Inference\"\n---\n\n::: {.cell hash='03_regression_cache/html/unnamed-chunk-1_c846f3ceda458061b4d2723c915d616d'}\n\n```{.r .cell-code}\n#1\ndata <- readRDS(\"C:/Users/Anjali/Downloads/Causal_Data_Science_Data (1)/Causal_Data_Science_Data/car_prices.rds\")\n# Assuming your data is stored in a variable named 'data'\ndata_dimensions <- dim(data)\n\n# Printing the number of rows and columns\nprint(paste(\"Number of rows:\", data_dimensions[1]))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Number of rows: 181\"\n```\n:::\n\n```{.r .cell-code}\nprint(paste(\"Number of columns:\", data_dimensions[2]))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Number of columns: 22\"\n```\n:::\n:::\n\n::: {.cell hash='03_regression_cache/html/unnamed-chunk-2_c2fb915e6a5e56525dc509748efc9dc1'}\n\n```{.r .cell-code}\n#2\n# Use str() to get the structure of the data\nstr(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Classes 'tbl_df', 'tbl' and 'data.frame':\t181 obs. of  22 variables:\n#>  $ aspiration      : chr  \"std\" \"std\" \"std\" \"std\" ...\n#>  $ doornumber      : chr  \"two\" \"two\" \"two\" \"four\" ...\n#>  $ carbody         : chr  \"convertible\" \"convertible\" \"hatchback\" \"sedan\" ...\n#>  $ drivewheel      : chr  \"rwd\" \"rwd\" \"rwd\" \"fwd\" ...\n#>  $ enginelocation  : chr  \"front\" \"front\" \"front\" \"front\" ...\n#>  $ wheelbase       : num  88.6 88.6 94.5 99.8 99.4 ...\n#>  $ carlength       : num  169 169 171 177 177 ...\n#>  $ carwidth        : num  64.1 64.1 65.5 66.2 66.4 66.3 71.4 71.4 71.4 67.9 ...\n#>  $ carheight       : num  48.8 48.8 52.4 54.3 54.3 53.1 55.7 55.7 55.9 52 ...\n#>  $ curbweight      : num  2548 2548 2823 2337 2824 ...\n#>  $ enginetype      : chr  \"dohc\" \"dohc\" \"ohcv\" \"ohc\" ...\n#>  $ cylindernumber  : chr  \"four\" \"four\" \"six\" \"four\" ...\n#>  $ enginesize      : num  130 130 152 109 136 136 136 136 131 131 ...\n#>  $ fuelsystem      : chr  \"mpfi\" \"mpfi\" \"mpfi\" \"mpfi\" ...\n#>  $ boreratio       : num  3.47 3.47 2.68 3.19 3.19 3.19 3.19 3.19 3.13 3.13 ...\n#>  $ stroke          : num  2.68 2.68 3.47 3.4 3.4 3.4 3.4 3.4 3.4 3.4 ...\n#>  $ compressionratio: num  9 9 9 10 8 8.5 8.5 8.5 8.3 7 ...\n#>  $ horsepower      : num  111 111 154 102 115 110 110 110 140 160 ...\n#>  $ peakrpm         : num  5000 5000 5000 5500 5500 5500 5500 5500 5500 5500 ...\n#>  $ citympg         : num  21 21 19 24 18 19 19 19 17 16 ...\n#>  $ highwaympg      : num  27 27 26 30 22 25 25 25 20 22 ...\n#>  $ price           : num  13495 16500 16500 13950 17450 ...\n```\n:::\n\n```{.r .cell-code}\n# Use summary() for a summary of the data\nsummary(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>   aspiration         doornumber          carbody           drivewheel       \n#>  Length:181         Length:181         Length:181         Length:181        \n#>  Class :character   Class :character   Class :character   Class :character  \n#>  Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n#>                                                                             \n#>                                                                             \n#>                                                                             \n#>  enginelocation       wheelbase        carlength        carwidth    \n#>  Length:181         Min.   : 86.60   Min.   :141.1   Min.   :60.30  \n#>  Class :character   1st Qu.: 94.50   1st Qu.:166.3   1st Qu.:64.00  \n#>  Mode  :character   Median : 96.50   Median :173.0   Median :65.40  \n#>                     Mean   : 98.21   Mean   :173.3   Mean   :65.74  \n#>                     3rd Qu.:100.40   3rd Qu.:180.2   3rd Qu.:66.50  \n#>                     Max.   :120.90   Max.   :208.1   Max.   :72.30  \n#>    carheight       curbweight    enginetype        cylindernumber    \n#>  Min.   :47.80   Min.   :1488   Length:181         Length:181        \n#>  1st Qu.:52.00   1st Qu.:2122   Class :character   Class :character  \n#>  Median :53.70   Median :2410   Mode  :character   Mode  :character  \n#>  Mean   :53.58   Mean   :2521                                        \n#>  3rd Qu.:55.50   3rd Qu.:2910                                        \n#>  Max.   :59.80   Max.   :4066                                        \n#>    enginesize     fuelsystem          boreratio         stroke    \n#>  Min.   : 61.0   Length:181         Min.   :2.540   Min.   :2.07  \n#>  1st Qu.: 98.0   Class :character   1st Qu.:3.150   1st Qu.:3.08  \n#>  Median :120.0   Mode  :character   Median :3.310   Median :3.23  \n#>  Mean   :127.1                      Mean   :3.325   Mean   :3.23  \n#>  3rd Qu.:141.0                      3rd Qu.:3.590   3rd Qu.:3.40  \n#>  Max.   :326.0                      Max.   :3.940   Max.   :4.17  \n#>  compressionratio   horsepower       peakrpm        citympg     \n#>  Min.   : 7.000   Min.   : 48.0   Min.   :4200   Min.   :13.00  \n#>  1st Qu.: 8.500   1st Qu.: 70.0   1st Qu.:4800   1st Qu.:19.00  \n#>  Median : 9.000   Median : 95.0   Median :5200   Median :24.00  \n#>  Mean   : 8.848   Mean   :106.2   Mean   :5182   Mean   :24.85  \n#>  3rd Qu.: 9.400   3rd Qu.:116.0   3rd Qu.:5500   3rd Qu.:30.00  \n#>  Max.   :11.500   Max.   :288.0   Max.   :6600   Max.   :49.00  \n#>    highwaympg        price      \n#>  Min.   :16.00   Min.   : 5118  \n#>  1st Qu.:25.00   1st Qu.: 7609  \n#>  Median :30.00   Median : 9980  \n#>  Mean   :30.48   Mean   :12999  \n#>  3rd Qu.:34.00   3rd Qu.:16430  \n#>  Max.   :54.00   Max.   :45400\n```\n:::\n\n```{.r .cell-code}\n# Use head() to display the first few rows of the data\nhead(data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"aspiration\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"doornumber\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"carbody\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"drivewheel\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"enginelocation\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"wheelbase\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"carlength\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"carwidth\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"carheight\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"curbweight\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"enginetype\"],\"name\":[11],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"cylindernumber\"],\"name\":[12],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"enginesize\"],\"name\":[13],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"fuelsystem\"],\"name\":[14],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"boreratio\"],\"name\":[15],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"stroke\"],\"name\":[16],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"compressionratio\"],\"name\":[17],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"horsepower\"],\"name\":[18],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"peakrpm\"],\"name\":[19],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"citympg\"],\"name\":[20],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"highwaympg\"],\"name\":[21],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"price\"],\"name\":[22],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"std\",\"2\":\"two\",\"3\":\"convertible\",\"4\":\"rwd\",\"5\":\"front\",\"6\":\"88.6\",\"7\":\"168.8\",\"8\":\"64.1\",\"9\":\"48.8\",\"10\":\"2548\",\"11\":\"dohc\",\"12\":\"four\",\"13\":\"130\",\"14\":\"mpfi\",\"15\":\"3.47\",\"16\":\"2.68\",\"17\":\"9.0\",\"18\":\"111\",\"19\":\"5000\",\"20\":\"21\",\"21\":\"27\",\"22\":\"13495\",\"_rn_\":\"1\"},{\"1\":\"std\",\"2\":\"two\",\"3\":\"convertible\",\"4\":\"rwd\",\"5\":\"front\",\"6\":\"88.6\",\"7\":\"168.8\",\"8\":\"64.1\",\"9\":\"48.8\",\"10\":\"2548\",\"11\":\"dohc\",\"12\":\"four\",\"13\":\"130\",\"14\":\"mpfi\",\"15\":\"3.47\",\"16\":\"2.68\",\"17\":\"9.0\",\"18\":\"111\",\"19\":\"5000\",\"20\":\"21\",\"21\":\"27\",\"22\":\"16500\",\"_rn_\":\"2\"},{\"1\":\"std\",\"2\":\"two\",\"3\":\"hatchback\",\"4\":\"rwd\",\"5\":\"front\",\"6\":\"94.5\",\"7\":\"171.2\",\"8\":\"65.5\",\"9\":\"52.4\",\"10\":\"2823\",\"11\":\"ohcv\",\"12\":\"six\",\"13\":\"152\",\"14\":\"mpfi\",\"15\":\"2.68\",\"16\":\"3.47\",\"17\":\"9.0\",\"18\":\"154\",\"19\":\"5000\",\"20\":\"19\",\"21\":\"26\",\"22\":\"16500\",\"_rn_\":\"3\"},{\"1\":\"std\",\"2\":\"four\",\"3\":\"sedan\",\"4\":\"fwd\",\"5\":\"front\",\"6\":\"99.8\",\"7\":\"176.6\",\"8\":\"66.2\",\"9\":\"54.3\",\"10\":\"2337\",\"11\":\"ohc\",\"12\":\"four\",\"13\":\"109\",\"14\":\"mpfi\",\"15\":\"3.19\",\"16\":\"3.40\",\"17\":\"10.0\",\"18\":\"102\",\"19\":\"5500\",\"20\":\"24\",\"21\":\"30\",\"22\":\"13950\",\"_rn_\":\"4\"},{\"1\":\"std\",\"2\":\"four\",\"3\":\"sedan\",\"4\":\"4wd\",\"5\":\"front\",\"6\":\"99.4\",\"7\":\"176.6\",\"8\":\"66.4\",\"9\":\"54.3\",\"10\":\"2824\",\"11\":\"ohc\",\"12\":\"five\",\"13\":\"136\",\"14\":\"mpfi\",\"15\":\"3.19\",\"16\":\"3.40\",\"17\":\"8.0\",\"18\":\"115\",\"19\":\"5500\",\"20\":\"18\",\"21\":\"22\",\"22\":\"17450\",\"_rn_\":\"5\"},{\"1\":\"std\",\"2\":\"two\",\"3\":\"sedan\",\"4\":\"fwd\",\"5\":\"front\",\"6\":\"99.8\",\"7\":\"177.3\",\"8\":\"66.3\",\"9\":\"53.1\",\"10\":\"2507\",\"11\":\"ohc\",\"12\":\"five\",\"13\":\"136\",\"14\":\"mpfi\",\"15\":\"3.19\",\"16\":\"3.40\",\"17\":\"8.5\",\"18\":\"110\",\"19\":\"5500\",\"20\":\"19\",\"21\":\"25\",\"22\":\"15250\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell hash='03_regression_cache/html/unnamed-chunk-3_246aa87ebaf356f83639a68694aee68f'}\n\n```{.r .cell-code}\n#3\n# Include all potential regressors\nlm_all <- lm(price ~ ., data=data)\nsummary(lm_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = price ~ ., data = data)\n#> \n#> Residuals:\n#>    Min     1Q Median     3Q    Max \n#>  -5662  -1120      0    798   9040 \n#> \n#> Coefficients:\n#>                        Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)          -36269.965  15460.866  -2.346 0.020354 *  \n#> aspirationturbo        1846.206   1041.391   1.773 0.078386 .  \n#> doornumbertwo           242.523    571.929   0.424 0.672172    \n#> carbodyhardtop        -3691.743   1424.825  -2.591 0.010561 *  \n#> carbodyhatchback      -3344.335   1238.359  -2.701 0.007757 ** \n#> carbodysedan          -2292.820   1356.014  -1.691 0.093043 .  \n#> carbodywagon          -3427.921   1490.285  -2.300 0.022885 *  \n#> drivewheelfwd          -504.564   1076.623  -0.469 0.640030    \n#> drivewheelrwd           -15.446   1268.070  -0.012 0.990299    \n#> enginelocationrear     6643.492   2572.275   2.583 0.010806 *  \n#> wheelbase               -30.197     92.776  -0.325 0.745294    \n#> carlength               -29.740     51.672  -0.576 0.565824    \n#> carwidth                731.819    244.533   2.993 0.003258 ** \n#> carheight               123.195    134.607   0.915 0.361617    \n#> curbweight                2.612      1.781   1.467 0.144706    \n#> enginetypedohcv       -8541.957   4749.685  -1.798 0.074219 .  \n#> enginetypel             978.748   1786.384   0.548 0.584619    \n#> enginetypeohc          3345.252    933.001   3.585 0.000461 ***\n#> enginetypeohcf          972.919   1625.631   0.598 0.550462    \n#> enginetypeohcv        -6222.322   1236.415  -5.033 1.43e-06 ***\n#> cylindernumberfive   -11724.540   3019.192  -3.883 0.000157 ***\n#> cylindernumberfour   -11549.326   3177.177  -3.635 0.000387 ***\n#> cylindernumbersix     -7151.398   2247.230  -3.182 0.001793 ** \n#> cylindernumberthree   -4318.929   4688.833  -0.921 0.358545    \n#> cylindernumbertwelve -11122.209   4196.494  -2.650 0.008946 ** \n#> enginesize              125.934     26.541   4.745 5.00e-06 ***\n#> fuelsystem2bbl          177.136    883.615   0.200 0.841400    \n#> fuelsystemmfi         -3041.018   2576.996  -1.180 0.239934    \n#> fuelsystemmpfi          359.278   1001.529   0.359 0.720326    \n#> fuelsystemspdi        -2543.890   1363.546  -1.866 0.064140 .  \n#> fuelsystemspfi          514.766   2499.229   0.206 0.837107    \n#> boreratio             -1306.740   1642.221  -0.796 0.427516    \n#> stroke                -4527.137    922.732  -4.906 2.49e-06 ***\n#> compressionratio       -737.901    555.960  -1.327 0.186539    \n#> horsepower               10.293     22.709   0.453 0.651035    \n#> peakrpm                   2.526      0.634   3.983 0.000108 ***\n#> citympg                 -90.352    166.647  -0.542 0.588538    \n#> highwaympg              154.858    167.148   0.926 0.355761    \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 2189 on 143 degrees of freedom\n#> Multiple R-squared:  0.9415,\tAdjusted R-squared:  0.9264 \n#> F-statistic: 62.21 on 37 and 143 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\n#Let’s build a second regression model, where we only include variables that were statistically significant in the previous model.\n\n# Include only significant regressors\nlm_imp <- lm(price ~ enginetype + cylindernumber + enginesize + stroke + peakrpm, data = data)\nsummary(lm_imp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = price ~ enginetype + cylindernumber + enginesize + \n#>     stroke + peakrpm, data = data)\n#> \n#> Residuals:\n#>     Min      1Q  Median      3Q     Max \n#> -6032.7 -1231.6  -157.4  1163.4  8091.3 \n#> \n#> Coefficients:\n#>                        Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)          -3.803e+03  4.584e+03  -0.830 0.407877    \n#> enginetypedohcv      -5.351e+03  3.247e+03  -1.648 0.101253    \n#> enginetypel           4.275e+03  1.371e+03   3.117 0.002150 ** \n#> enginetypeohc         3.508e+03  8.723e+02   4.022 8.74e-05 ***\n#> enginetypeohcf        7.758e+02  1.117e+03   0.695 0.488171    \n#> enginetypeohcv       -6.654e+03  1.249e+03  -5.327 3.19e-07 ***\n#> cylindernumberfive   -6.220e+03  2.538e+03  -2.451 0.015291 *  \n#> cylindernumberfour   -9.089e+03  2.491e+03  -3.649 0.000352 ***\n#> cylindernumbersix    -5.299e+03  1.863e+03  -2.844 0.005015 ** \n#> cylindernumberthree  -5.904e+03  4.110e+03  -1.437 0.152688    \n#> cylindernumbertwelve -1.821e+04  3.001e+03  -6.070 8.34e-09 ***\n#> enginesize            1.990e+02  1.091e+01  18.242  < 2e-16 ***\n#> stroke               -6.225e+03  8.397e+02  -7.414 5.86e-12 ***\n#> peakrpm               3.393e+00  4.888e-01   6.941 8.21e-11 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 2559 on 167 degrees of freedom\n#> Multiple R-squared:  0.9067,\tAdjusted R-squared:  0.8994 \n#> F-statistic: 124.8 on 13 and 167 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n::: {.cell hash='03_regression_cache/html/unnamed-chunk-4_911d5b8c04f3054e475e4b973dcfd99e'}\n\n```{.r .cell-code}\n#4.1\n# Assuming 'enginetype' is a categorical variable\nstr(data$enginetype)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  chr [1:181] \"dohc\" \"dohc\" \"ohcv\" \"ohc\" \"ohc\" \"ohc\" \"ohc\" \"ohc\" \"ohc\" \"ohc\" ...\n```\n:::\n\n```{.r .cell-code}\n# Unique values it can take on\nunique_values <- unique(data$enginetype)\nprint(unique_values)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"dohc\"  \"ohcv\"  \"ohc\"   \"l\"     \"ohcf\"  \"dohcv\"\n```\n:::\n:::\n\n::: {.cell hash='03_regression_cache/html/unnamed-chunk-5_0a9405abf746712e834c0bd5bdcc901c'}\n\n```{.r .cell-code}\n#4.2 & 4.3\n# Fit a linear regression model with 'enginetype' as the only predictor\nmodel_enginetype <- lm(price ~ enginetype, data =data)\nsummary(model_enginetype)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = price ~ enginetype, data = data)\n#> \n#> Residuals:\n#>    Min     1Q Median     3Q    Max \n#> -11599  -4237  -2171   1872  30223 \n#> \n#> Coefficients:\n#>                 Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)        18116       2031   8.919 6.15e-16 ***\n#> enginetypedohcv    13284       7324   1.814  0.07142 .  \n#> enginetypel        -4324       3346  -1.292  0.19802    \n#> enginetypeohc      -7025       2121  -3.312  0.00112 ** \n#> enginetypeohcf     -4378       2725  -1.606  0.10999    \n#> enginetypeohcv      6982       2817   2.479  0.01414 *  \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 7037 on 175 degrees of freedom\n#> Multiple R-squared:  0.2605,\tAdjusted R-squared:  0.2394 \n#> F-statistic: 12.33 on 5 and 175 DF,  p-value: 2.981e-10\n```\n:::\n:::\n\nWhen compared to the reference level, the 'enginetypeohc' and 'enginetypeohcv' categories have statistically significant effects on the price. The other categories ('enginetypedohcv,' 'enginetypel,' and 'enginetypeohcf') do not have statistically significant effects based on the p-values.<br>\n<br>\nenginetypeohc: The estimated decrease in price for cars with 'enginetypeohc' compared to the reference level is $7,025. The p-value (0.00112) is less than 0.05, so the effect is statistically significant at the 0.05 significance level.<br>\n<br>\nenginetypeohcv: The estimated increase in price for cars with 'enginetypeohcv' compared to the reference level is $6,982. The p-value (0.01414) is less than 0.05, so the effect is statistically significant at the 0.05 significance level.<br>\n<br>\nChanging the value of 'enginetype' involves comparing the effect of different engine types on the predicted price\n\n\n::: {.cell hash='03_regression_cache/html/unnamed-chunk-6_86551703a299cae0dd3013b43b3ab87d'}\n\n```{.r .cell-code}\n#5\n\nlibrary(dplyr)\n\n# Add a new variable 'seat_heating' with value TRUE for all observations\nnew_df <- data %>% mutate(seat_heating = TRUE)\n\n# Run a regression with the new variable\nmodel_with_seat_heating <- lm(price ~ . + seat_heating, data = new_df)\n\n# Print the summary of the linear regression model\nsummary(model_with_seat_heating)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = price ~ . + seat_heating, data = new_df)\n#> \n#> Residuals:\n#>    Min     1Q Median     3Q    Max \n#>  -5662  -1120      0    798   9040 \n#> \n#> Coefficients: (1 not defined because of singularities)\n#>                        Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)          -36269.965  15460.866  -2.346 0.020354 *  \n#> aspirationturbo        1846.206   1041.391   1.773 0.078386 .  \n#> doornumbertwo           242.523    571.929   0.424 0.672172    \n#> carbodyhardtop        -3691.743   1424.825  -2.591 0.010561 *  \n#> carbodyhatchback      -3344.335   1238.359  -2.701 0.007757 ** \n#> carbodysedan          -2292.820   1356.014  -1.691 0.093043 .  \n#> carbodywagon          -3427.921   1490.285  -2.300 0.022885 *  \n#> drivewheelfwd          -504.564   1076.623  -0.469 0.640030    \n#> drivewheelrwd           -15.446   1268.070  -0.012 0.990299    \n#> enginelocationrear     6643.492   2572.275   2.583 0.010806 *  \n#> wheelbase               -30.197     92.776  -0.325 0.745294    \n#> carlength               -29.740     51.672  -0.576 0.565824    \n#> carwidth                731.819    244.533   2.993 0.003258 ** \n#> carheight               123.195    134.607   0.915 0.361617    \n#> curbweight                2.612      1.781   1.467 0.144706    \n#> enginetypedohcv       -8541.957   4749.685  -1.798 0.074219 .  \n#> enginetypel             978.748   1786.384   0.548 0.584619    \n#> enginetypeohc          3345.252    933.001   3.585 0.000461 ***\n#> enginetypeohcf          972.919   1625.631   0.598 0.550462    \n#> enginetypeohcv        -6222.322   1236.415  -5.033 1.43e-06 ***\n#> cylindernumberfive   -11724.540   3019.192  -3.883 0.000157 ***\n#> cylindernumberfour   -11549.326   3177.177  -3.635 0.000387 ***\n#> cylindernumbersix     -7151.398   2247.230  -3.182 0.001793 ** \n#> cylindernumberthree   -4318.929   4688.833  -0.921 0.358545    \n#> cylindernumbertwelve -11122.209   4196.494  -2.650 0.008946 ** \n#> enginesize              125.934     26.541   4.745 5.00e-06 ***\n#> fuelsystem2bbl          177.136    883.615   0.200 0.841400    \n#> fuelsystemmfi         -3041.018   2576.996  -1.180 0.239934    \n#> fuelsystemmpfi          359.278   1001.529   0.359 0.720326    \n#> fuelsystemspdi        -2543.890   1363.546  -1.866 0.064140 .  \n#> fuelsystemspfi          514.766   2499.229   0.206 0.837107    \n#> boreratio             -1306.740   1642.221  -0.796 0.427516    \n#> stroke                -4527.137    922.732  -4.906 2.49e-06 ***\n#> compressionratio       -737.901    555.960  -1.327 0.186539    \n#> horsepower               10.293     22.709   0.453 0.651035    \n#> peakrpm                   2.526      0.634   3.983 0.000108 ***\n#> citympg                 -90.352    166.647  -0.542 0.588538    \n#> highwaympg              154.858    167.148   0.926 0.355761    \n#> seat_heatingTRUE             NA         NA      NA       NA    \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 2189 on 143 degrees of freedom\n#> Multiple R-squared:  0.9415,\tAdjusted R-squared:  0.9264 \n#> F-statistic: 62.21 on 37 and 143 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\nPerfect Collinearity: If the new variable has the same value for all observations (in this case, TRUE for all), it will lead to perfect collinearity. Perfect collinearity occurs when one variable can be exactly predicted from another variable or a combination of other variables in the model. In such cases, the regression model cannot estimate the coefficients separately, resulting in NA coefficients.<br>\n<br>\nPerfect Prediction: If the new variable is perfectly predictive of the dependent variable, the regression model may not be able to estimate the coefficients due to perfect prediction. This can occur when there is no variability in the dependent variable within each level of the new variable.\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}