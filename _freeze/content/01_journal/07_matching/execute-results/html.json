{
  "hash": "5d68ec09acbf5abe8ea4e450170e298e",
  "result": {
    "markdown": "---\ntitle: \"Matching and Subclassification\"\n---\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-1_15e01816b7cc6a95a4bc68bb97e9d9fe'}\n\n```{.r .cell-code}\ndata <- readRDS(\"C:/Users/Anjali/Downloads/Causal_Data_Science_Data (1)/Causal_Data_Science_Data/membership.rds\")\n\n# Install and load the 'dagitty' package\nlibrary(dagitty)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'dagitty' was built under R version 4.3.2\n```\n:::\n\n```{.r .cell-code}\n# Create a DAG\ndag <- dagitty(\"dag {\n  age -> plus_membership\n  sex -> plus_membership\n  pre_avg_purch -> plus_membership\n  plus_membership -> sales\n}\")\n\n# Plot the DAG\nplot(dag)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Plot coordinates for graph not supplied! Generating coordinates, see ?coordinates for how to set your own.\n```\n:::\n\n::: {.cell-output-display}\n![](07_matching_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Save the plot as an image file (e.g., PNG)\npng(\"dag_plot.png\", width = 800, height = 600, units = \"px\", pointsize = 12)\nplot(dag)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Plot coordinates for graph not supplied! Generating coordinates, see ?coordinates for how to set your own.\n```\n:::\n\n```{.r .cell-code}\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> png \n#>   2\n```\n:::\n:::\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-2_ff9f373705888300a888380743cf9d7f'}\n\n```{.r .cell-code}\n#2\n\n# Create a binary variable indicating treatment (1 for cardholders) or control (0 for non-cardholders)\ndata$treatment <- ifelse(data$card == 1, 1, 0)\n\n# Separate the data into treatment and control groups\ntreatment_group <- data[data$treatment == 1, ]\ncontrol_group <- data[data$treatment == 0, ]\n\n# Compute the average sales for each group\naverage_sales_treatment <- mean(treatment_group$sales)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in mean.default(treatment_group$sales): argument is not numeric or\n#> logical: returning NA\n```\n:::\n\n```{.r .cell-code}\naverage_sales_control <- mean(control_group$sales)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in mean.default(control_group$sales): argument is not numeric or\n#> logical: returning NA\n```\n:::\n\n```{.r .cell-code}\n# Compute the naive estimate of the ATE\nnaive_ate <- average_sales_treatment - average_sales_control\n\n# Print or return the naive estimate of ATE\ncat(\"Naive Estimate of ATE:\", naive_ate, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Naive Estimate of ATE: NA\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}